Problem Link--->https://leetcode.com/problems/pacific-atlantic-water-flow/

class Solution:
    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:
        directions=[[1,0],[-1,0],[0,-1],[0,1]]
        ans=[]
        rows=len(heights)
        cols=len(heights[0])
        for i in range(rows):
            for j in range(cols):
                queue=deque()
                queue.append([i,j])
                visited=set()
                visited.add((i,j))
                pacific=atlantic=False
                while queue: 
                    x,y=queue.popleft()
                    if y==0 or x==0:
                        pacific=True
                    if x==rows-1 or y==cols-1:
                        atlantic=True
                    if pacific and atlantic:
                        ans.append([i,j])
                        break
                    for dir in directions:
                        u,v=x+dir[0],y+dir[1]
                        if 0<=u<rows and 0<=v<cols and (u,v) not in visited and heights[u][v]<=heights[x][y]:
                            queue.append([u,v])
                            visited.add((u,v))
                    
        return ans
                            
                        
