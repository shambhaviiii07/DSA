Problem Link--->https://leetcode.com/problems/check-completeness-of-a-binary-tree/

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isCompleteTree(self, root: Optional[TreeNode]) -> bool:
        queue=deque()
        queue.append(root)
        while queue:
            length=len(queue)
            for i in range(length):
                node=queue.popleft()
                if node==None:
                    #Checks if there exists a node that is not as far left as possible.
                    if len(queue)!=0 and queue[0]!=None:
                        return False
                else:
                    queue.append(node.left)
                    queue.append(node.right)
        return True
