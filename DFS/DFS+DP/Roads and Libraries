Problem Link--->https://www.hackerrank.com/challenges/torque-and-development/problem

def roadsAndLibraries(n, c_lib, c_road, cities):
    def dfs(node):
        visited[node]=True
        count=1
        for dost in graph[node]:
            if not visited[dost]:
                count+=dfs(dost)
        return count
   
    graph=dict()
    for i in range(1,n+1):
        graph[i]=[]
    for city in cities:
        if city[0] in graph:
            graph[city[0]].append(city[1])
        else:
            graph[city[0]]=[city[1]]
        if city[1] in graph:
            graph[city[1]].append(city[0])
        else:
            graph[city[1]]=[city[0]]
    visited=[False for i in range(n+1)]
    components=[]
    
    for v in range(1,n+1):
        if len(graph[v]) and not visited[v]:
            components.append(dfs(v))
        elif not len(graph[v]):
            components.append(1)
    ans=0
    for i in range(len(components)):
        ans+=min((components[i]-1)*c_road+c_lib,c_lib*components[i])
    return ans
