ProblemLink--->https://leetcode.com/problems/pacific-atlantic-water-flow/

class Solution:
    def dfs(self,r,c,visited,heights,prev):
        if r not in range(len(heights)) or c not in range(len(heights[0])) or (r,c) in visited or heights[r][c]<prev:
            return
        visited.add((r,c))
        self.dfs(r+1,c,visited,heights,heights[r][c])
        self.dfs(r,c+1,visited,heights,heights[r][c])
        self.dfs(r,c-1,visited,heights,heights[r][c])
        self.dfs(r-1,c,visited,heights,heights[r][c])
    def pacificAtlantic(self, heights: List[List[int]]) -> List[List[int]]:
        ans=[]
        pacific=set()
        atlantic=set()
        for i in range(len(heights[0])):
            self.dfs(0,i,pacific,heights,heights[0][i])
            self.dfs(len(heights)-1,i,atlantic,heights,heights[len(heights)-1][i])
        for i in range(len(heights)):
            self.dfs(i,0,pacific,heights,heights[i][0])
            self.dfs(i,len(heights[0])-1,atlantic,heights,heights[i][len(heights[0])-1])
        for i in pacific:
            if i in atlantic:
                ans.append([i[0],i[1]])
        return ans
