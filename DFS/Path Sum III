Problem Link--> https://leetcode.com/problems/path-sum-iii

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def dfs(self,root,s,targetSum):
        if root is None:
            return
        if targetSum==s+root.val:
            self.ans+=1
        self.dfs(root.left,s+root.val,targetSum)
        self.dfs(root.right,s+root.val,targetSum)
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> int:
        self.ans=0
        queue=deque()
        queue.append(root)
        while queue:
            t=queue.popleft()
            self.dfs(t,0,targetSum)
            if t and t.left:
                queue.append(t.left)
            if t and t.right:
                queue.append(t.right)
        return self.ans
