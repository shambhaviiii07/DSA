Problem Link--->https://leetcode.com/problems/count-sub-islands/

class Solution:
    def countSubIslands(self, grid1: List[List[int]], grid2: List[List[int]]) -> int:
        def dfs(row,col):
            if row not in range(len(grid1)) or col not in range(len(grid1[0])) or visited[row][col]==True or grid2[row][col]==0:
                return True
            visited[row][col]=True
            res=True
            if grid1[row][col]==0:
                res=False
            res=dfs(row+1,col)and res
            res=dfs(row-1,col)and res
            res=dfs(row,col+1)and res
            res=dfs(row,col-1)and res
            return res
        count=0
        visited=[[False for j in range(len(grid1[0]))]for i in range(len(grid1))]
        for i in range(len(grid1)):
            for j in range(len(grid1[0])):
                if not visited[i][j] and grid2[i][j] and dfs(i,j) :
                    count+=1
        return count
