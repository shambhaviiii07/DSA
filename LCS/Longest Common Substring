Problem Link--->https://practice.geeksforgeeks.org/problems/longest-common-substring1452/1#


# Recursive

class Solution:
    def longestCommonSubstr(self, S1, S2, n, m):
        # code here
        def recursive(n,m,count):
            if n==0 or m==0:
                return 0
            if S1[m-1]==S2[n-1]:
                count=recursive(n-1,m-1,count+1)
            count=max(count,max(recursive(n-1,m,0),recursive(n,m-1,0)))
            return count
        return recursive(len(S2),len(S1),0)
        
        
#TABULATION
class Solution:
    def longestCommonSubstr(self, S1, S2, n, m):
        # code here
        n=len(S2)
        m=len(S1)
        count=0
        dp=[[0 for i in range(m+1)]for j in range(n+1)]
        for i in range(1,n+1):
            for j in range(1,m+1):
                if i==0 or j==0:
                    dp[i][j]=0
                if S1[j-1]==S2[i-1]:
                    dp[i][j]=1+dp[i-1][j-1]
                    count=max(count,dp[i][j])
                else:
                    dp[i][j]=0
        return count
