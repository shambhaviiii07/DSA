def isSubsetSum (self, N, arr, summ):
        dp = [[-1]*(summ+1) for i in range(N+1)]
        def helper(N,summ,arr,dp):
            if dp[N][summ]!=-1:
                return dp[N][summ]
            if summ== 0:
                dp[N][summ] = True
                return dp[N][summ]
            if N == 0:
                dp[N][summ] = False
                return dp[N][summ]
            if arr[N-1]>summ:
                dp[N][summ] = helper(N-1,summ,arr,dp)
                return dp[N][summ]
            dp[N][summ] = helper(N-1,summ,arr,dp) or helper(N-1,summ-arr[N-1],arr,dp)
            return dp[N][summ]
        return helper(N,summ,arr,dp)
