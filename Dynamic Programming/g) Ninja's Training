Problem Link--->https://www.codingninjas.com/codestudio/problems/ninja-s-training_3621003?leftPanelTab=0

from typing import *
import math
def solve(day,last,points,dp):
    if dp[day][last]!=-1:
        return dp[day][last]
    if day==0:
        maxi=-math.inf
        for i in range(3):
            if i!=last:
                maxi=max(maxi,points[0][i])
        dp[day][last]= maxi
        return dp[day][last]
    maxi=-math.inf
    for i in range(3):
        if i!=last:
            maxi=max(maxi,solve(day-1,i,points,dp)+points[day][i])
    dp[day][last]= maxi
    return dp[day][last]
def ninjaTraining(n: int, points: List[List[int]]) -> int:

    MEMOIZATION
    
    dp=[[-1 for i in range(3)]for j in range(n)]
    return max(solve(n-1,0,points,dp),solve(n-1,1,points,dp),solve(n-1,2,points,dp))
    
    TABULATION
    
    dp=[[-1 for j in range(3)]for i in range(n)]
    dp[0][0]=max(points[0][1],points[0][2])
    dp[0][1]=max(points[0][0],points[0][2])
    dp[0][2]=max(points[0][1],points[0][0])
    for day in range(1,n):
        for last in range(3):
            maxi=-math.inf
            for task in range(3):
                if task!=last:
                    maxi=max(maxi,points[day][task]+dp[day-1][task])
        dp[day][last]=maxi
    return dp[n-1][2]
    
    for i in range(1,len(points)):
        points[i][0]=points[i][0]+max(points[i-1][1],points[i-1][2])
        points[i][1]=points[i][1]+max(points[i-1][0],points[i-1][2])
        points[i][2]=points[i][2]+max(points[i-1][1],points[i-1][0])
    return max(points[-1])
