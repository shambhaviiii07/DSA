Problem Link--->https://leetcode.com/problems/count-square-submatrices-with-all-ones/description/

class Solution:
    def countSquares(self, matrix: List[List[int]]) -> int:
        dp=[[0 for j in range(len(matrix[0]))]for i in range(len(matrix))]
        for i in range(len(dp)):
            dp[i][0]=matrix[i][0]
        for j in range(len(matrix[0])):
            dp[0][j]=matrix[0][j]
        for i in range(1,len(matrix)):
            for j in range(1,len(matrix[0])):
                if matrix[i][j]!=0:
                    dp[i][j]=1+min(dp[i-1][j-1],dp[i-1][j],dp[i][j-1])
        sum=0
        for i in range(len(matrix)):
            for j in range(len(matrix[0])):
                sum+=dp[i][j]
        return sum
