Problem Link--->https://www.codingninjas.com/codestudio/problems/subsequence-counting_3755256?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos&leftPanelTab=0

def subsequenceCounting(t: str, s: str, lt: int, ls: int) -> int:

    Tabulation

    s,t,ls,lt=t,s,lt,ls
    dp=[[0 for j in range(lt+1)]for i in range(ls+1)]
    for i in range(ls+1):
        dp[i][0]=1
    for i in range(1,ls+1):
        for j in range(1,lt+1):
            if s[i-1]==t[j-1]:
                dp[i][j]=(dp[i-1][j-1]+dp[i-1][j])%1000000007
            else:
                dp[i][j]=dp[i-1][j]
    return dp[ls][lt]
    
    Memoization
    
    s,t,ls,lt=t,s,lt,ls
    dp=[[-1 for j in range(lt+1)]for i in range(ls+1)]
    def solve(i,j):
        if j==0:
            return 1
        if i==0:
            return 0
        if dp[i][j]!=-1:
            return dp[i][j]
        if s[i-1]==t[j-1]:
            dp[i][j]=(solve(i-1,j-1)+solve(i-1,j))%1000000007
        else:
            dp[i][j]= (solve(i-1,j))%1000000007
        return dp[i][j]
    return solve(ls,lt)
    
    
    Recursion
    
    s,t,ls,lt=t,s,lt,ls
    def solve(i,j):
        if j==0:
            return 1
        if i==0:
            return 0
        if s[i-1]==t[j-1]:
            return (solve(i-1,j-1)+solve(i-1,j))%1000000007
        else:
            return solve(i-1,j)%1000000007
    return solve(ls,lt)
