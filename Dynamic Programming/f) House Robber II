Problem Link--->https://www.codingninjas.com/codestudio/problems/house-robber_839733?leftPanelTab=1

SPACE OPTIMIZATION
def houseRobber(valueInHouse):
    n=len(valueInHouse)
    if n==1:
        return valueInHouse[0]
    l=valueInHouse[1:]
    prev1=l[0]
    prev2=0
    for i in range(1,n-1):
        left=l[i]
        if i-2>=0:
            left+=prev2
        right=prev1
        curr=max(right,left)
        prev2=prev1
        prev1=curr
    a=prev1
    l=valueInHouse[:n-1]
    prev1=l[0]
    prev2=0
    for i in range(1,n-1):
        left=l[i]
        if i-2>=0:
            left+=prev2
        right=prev1
        curr=max(right,left)
        prev2=prev1
        prev1=curr
    b=prev1
    return max(a,b)
    
    
    TABULATION
    
    n=len(valueInHouse)
    if n==1:
        return valueInHouse[0]
    l=valueInHouse[1:]
    dp=[-1 for _ in range(n-1)]
    dp[0]=l[0]
    for i in range(1,n-1):
        left=l[i]
        if i-2>=0:
            left+=dp[i-2]
        right=dp[i-1]
        dp[i]=max(right,left)
    a=dp[n-2]
    l=valueInHouse[:n-1]
    dp=[-1 for _ in range(n-1)]
    dp[0]=l[0]
    for i in range(1,n-1):
        left=l[i]
        if i-2>=0:
            left+=dp[i-2]
        right=dp[i-1]
        dp[i]=max(right,left)
    b=dp[n-2]
    return max(a,b)
    
    MEMOIZATION
    
    def solve(i):
        if i<0:
            return 0
        if dp[i]!=-1:
            return dp[i]
        left=solve(i-2)+l[i]
        right=solve(i-1)
        dp[i] = max(left,right)
        return dp[i]
    n=len(valueInHouse)
    if n==1:
        return valueInHouse[0]
    l=valueInHouse[1:]
    dp=[-1 for _ in range(n-1)]
    a=solve(n-2)
    l=valueInHouse[:n-1]
    dp=[-1 for _ in range(n-1)]
    b=solve(n-2)
    return max(a,b)
    
    RECURSIVE 
    
    def solve(i):
        if i<0:
            return 0
        left=solve(i-2)+l[i]
        right=solve(i-1)
        return max(left,right)
    n=len(valueInHouse)
    if n==1:
        return valueInHouse[0]
    l=valueInHouse[1:]
    a=solve(n-2)
    l=valueInHouse[:n-1]
    b=solve(n-2)
    return max(a,b)
   
