Problem Link=> https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden/

class Solution {
    public int minTaps(int n, int[] ranges) {
        int taps=0;
        int[] temp=new int[n+1];
        for(int i=0;i<n+1;i++){
            int maxReachLeft=Math.max(0,i-ranges[i]);
            int maxReachRight=Math.min(n,i+ranges[i]);
            temp[maxReachLeft]=Math.max(temp[maxReachLeft],maxReachRight);
        }
        int maxReach=0;
        int currReach=0;
        for(int i=0;i<n;i++){
            if(maxReach<temp[i]){
                maxReach=temp[i];
            }
            if(currReach==i){
                if(currReach<n)
                    taps++;
                currReach=maxReach;
            }
            
        }
        if(currReach<n){
            return -1;
        }
        return taps;
    }
}
