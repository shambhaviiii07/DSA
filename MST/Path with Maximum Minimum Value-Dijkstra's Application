Problem Link--->https://www.tutorialspoint.com/path-with-maximum-minimum-value-in-python

from heapq import *
import math
class Solution:
    def pathWithMaximumMinimumValue(self,matrix):
        maxHeap=[]
        heappush(maxHeap,[-matrix[0][0],[0,0]])
        ans=min(matrix[0][0],matrix[-1][-1])
        directions=[(-1,0),(0,-1),(0,1),(1,0)]
        minVal=math.inf
        visited=[[False for j in range(len(matrix[0]))]for i in range(len(matrix))]
        while maxHeap:
            value,coOrdinates=heappop(maxHeap)
            value*=(-1)
            x,y=coOrdinates[0],coOrdinates[1]
            visited[x][y]=True
            minVal=min(minVal,value)
            if x==len(matrix)-1 and y==len(matrix[0])-1:
                return minVal
            for i,j in directions:
                row,col=i+x,y+j
                if row in range(len(matrix)) and col in range(len(matrix[0])) and not visited[row][col]:
                    heappush(maxHeap,[-matrix[row][col],[row,col]])
        
obj=Solution()
matrix=[[5,4,5],[1,2,6],[7,4,6]]
print(obj.pathWithMaximumMinimumValue(matrix))
